#!/bin/bash -e

#SBATCH --job-name=create_large_file     # Job name matching the Snakemake rule  
#SBATCH --ntasks=1                       # Single task
#SBATCH --cpus-per-task=1               # 1 CPU (matches threads: 1 in Snakemake)
#SBATCH --mem=2G                        # 2GB memory (matches mem_mb = 1024*2)
#SBATCH --time=00:02:00                 # 2 minutes (matches runtime = 2)
#SBATCH --partition=compute,hugemem     # Use the compute and hugemem partition
#SBATCH --account=2024-beyond_the_genome

# Check if batch parameter is provided
if [ -z "$1" ]; then
    echo "Usage: sbatch create_large_file.qsub <large_batch_number>"
    echo "Example: sbatch create_large_file.qsub 1"
    exit 1
fi

LARGE_BATCH=$1
LOGFILE="results/create_large_file_${LARGE_BATCH}.log"
LARGEFILE="results/largefile_${LARGE_BATCH}"

# Create results directory if it doesn't exist
mkdir -p results

# Start timing
start=$(date +%s)

# Log initial message
echo "$(hostname): Creating large file for batch ${LARGE_BATCH}..." > ${LOGFILE}
echo "Target file: ${LARGEFILE}" >> ${LOGFILE}

# Create the large file (1GB) using dd
dd if=/dev/zero of=${LARGEFILE} bs=1M count=1024 status=none

# End timing and calculate metrics
end=$(date +%s)
file_size=$(du -h ${LARGEFILE} | cut -f1)

# Log completion and performance metrics
echo "Large file creation completed in $((end-start)) seconds" >> ${LOGFILE}
echo "Created file size: $file_size" >> ${LOGFILE}

# Calculate write speed (using bc for floating-point arithmetic if available, otherwise integer)
if command -v bc &> /dev/null; then
    write_speed=$(echo "scale=2; 1024/$((end-start))" | bc -l)
    echo "Write speed: ${write_speed} MB/s" >> ${LOGFILE}
else
    write_speed=$((1024/(end-start)))
    echo "Write speed: ${write_speed} MB/s (integer calculation)" >> ${LOGFILE}
fi

# Note: In the Snakemake version, this file would be marked as temp() and auto-deleted
# For the qsub version, you might want to clean it up manually or leave it for analysis
echo "Large file created at: ${LARGEFILE}" >> ${LOGFILE}